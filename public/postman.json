{
  "info": {
    "name": "API Управления Пользователями",
    "description": "Полная коллекция API для системы управления пользователями с аутентификацией и CRUD-операциями",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000/api",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Аутентификация",
      "description": "Эндпоинты для аутентификации пользователей",
      "item": [
        {
          "name": "Регистрация пользователя",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Accept-Language",
                "value": "ru",
                "description": "Поддерживаемые: en, ru"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Иван Иванов\",\n  \"email\": \"ivan.ivanov@example.com\",\n  \"password\": \"Password123\",\n  \"password_confirmation\": \"Password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/register",
              "host": ["{{base_url}}"],
              "path": ["register"]
            },
            "description": "Регистрация нового пользователя"
          },
          "response": []
        },
        {
          "name": "Вход пользователя",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"ivan.ivanov@example.com\",\n  \"password\": \"Password123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/login",
              "host": ["{{base_url}}"],
              "path": ["login"]
            },
            "description": "Аутентификация пользователя и получение токена доступа"
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Сохраняем токен аутентификации в переменные коллекции",
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('auth_token', response.data.token);",
                  "    pm.collectionVariables.set('user_id', response.data.user.id);",
                  "    console.log('Токен сохранен:', pm.collectionVariables.get('auth_token'));",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ]
        },
        {
          "name": "Выход пользователя",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{base_url}}/logout",
              "host": ["{{base_url}}"],
              "path": ["logout"]
            },
            "description": "Выход пользователя и аннулирование токена"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Управление пользователями",
      "description": "CRUD-операции для управления пользователями",
      "item": [
        {
          "name": "Получить всех пользователей",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              },
              {
                "key": "Accept-Language",
                "value": "ru",
                "description": "Поддерживаемые: en, ru"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            },
            "description": "Получить пагинированный список всех пользователей"
          },
          "response": []
        },
        {
          "name": "Получить пользователей с фильтром",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users?name=Иван",
              "host": ["{{base_url}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "name",
                  "value": "Иван"
                }
              ]
            },
            "description": "Получить пользователей отфильтрованных по имени"
          },
          "response": []
        },
        {
          "name": "Создать нового пользователя",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Мария Петрова\",\n  \"email\": \"maria.petrova@example.com\",\n  \"password\": \"SecurePass123\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            },
            "description": "Создать нового пользователя (только для администраторов)"
          },
          "response": []
        },
        {
          "name": "Получить пользователя по ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            },
            "description": "Получить детальную информацию о конкретном пользователе по ID"
          },
          "response": []
        },
        {
          "name": "Обновить пользователя",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Иван Обновленный\",\n  \"email\": \"ivan.updated@example.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            },
            "description": "Обновить информацию о пользователе"
          },
          "response": []
        },
        {
          "name": "Удалить пользователя",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{}"
            },
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            },
            "description": "Удалить учетную запись пользователя"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Примеры - Ошибочные сценарии",
      "description": "Примеры запросов, демонстрирующие ошибочные ответы",
      "item": [
        {
          "name": "Регистрация - Ошибка валидации",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"\",\n  \"email\": \"неправильный-email\",\n  \"password\": \"123\",\n  \"password_confirmation\": \"456\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/register",
              "host": ["{{base_url}}"],
              "path": ["register"]
            },
            "description": "Пример ошибок валидации при регистрации"
          },
          "response": []
        },
        {
          "name": "Вход - Неверные учетные данные",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"неправильный@example.com\",\n  \"password\": \"неправильныйпароль\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/login",
              "host": ["{{base_url}}"],
              "path": ["login"]
            },
            "description": "Пример неверных учетных данных при входе"
          },
          "response": []
        },
        {
          "name": "Защищенный маршрут - Без токена",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            },
            "description": "Доступ к защищенному маршруту без токена аутентификации"
          },
          "response": []
        },
        {
          "name": "Получить несуществующего пользователя",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Accept",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{auth_token}}"
              }
            ],
            "url": {
              "raw": "{{base_url}}/users/9999",
              "host": ["{{base_url}}"],
              "path": ["users", "9999"]
            },
            "description": "Попытка получить пользователя, который не существует"
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "console.log('Переменные коллекции:', pm.collectionVariables.toObject());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Общие тесты для всех запросов",
          "pm.test(\"Статус код успешный\", function () {",
          "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
          "});",
          "",
          "pm.test(\"Ответ имеет правильную структуру\", function () {",
          "    const response = pm.response.json();",
          "    pm.expect(response).to.have.property('success');",
          "    pm.expect(response).to.have.property('message');",
          "});"
        ]
      }
    }
  ],
  "auth": null
}